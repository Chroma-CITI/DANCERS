# Configuration file format 4

# ******* GENERAL INFORMATION *******

experience_name: mini-dancers-default
run_id: 1
# Seed for the randomness of the experiment
seed: 15

# ******* SCENARIO DEFINITION *******

# The number of robots in the fleet
robots_number: 12

# The model of the robot. Must match the robots names in Gazebo in the following way : {robots_model}_{i} where i = 0..{robots_number}
# Example : x500_0, x500_1, x500_2, etc.
robots_model: x500

# Length of the simulation in seconds
simulation_length: 300 # s


# ******* NETWORK PARAMETERS (ns-3) *******
wifi_type: 'SpectrumWifiPhy' # [YansWifiPhy, SpectrumWifiPhy]
propagation_loss_model: 'LogDistancePropagationLossModel' # [LogDistancePropagationLossModel, HybridBuildingsPropagationLossModel], used only with YansWifiPhy
error_model_type: 'ns3::NistErrorRateModel'
phy_mode: 'ErpOfdmRate54Mbps'

# ******* NETWORK APPLICATIONS *******
mission_flow:
  enable: true
  source_robot_ids: [1]
  sink_robot_id: 0
  port: 7777
  packet_size: 64 # bytes
  interval: 500000 # us
  timeout: 500000 # us
  start_time: 0.0 # s
  stop_time: 300.0 # s
  flow_id: 1

broadcast_flow:
  enable: true
  port: 4000
  packet_size: 64 # bytes
  interval: 500000 # us
  timeout: 500000 # us
  start_time: 0.0 # s
  stop_time: 1000.0 # s
  flow_id: 2

# ******* FLOCKING *******
VAT_flocking_parameters:
  v_flock: 0.5
  v_max: 3
  a_frict: 4.16
  p_frict: 3.2
  r_0_frict: 85.3
  C_frict: 0.8
  v_frict: 0.63
  p_att: 0.08  # old 0.08
  r_0_att: 20
  p_rep: 0.13
  r_0_rep: 20
  a_shill: 53
  p_shill: 3.55
  r_0_shill: 0.3 # old 0.3
  v_shill: 13.622
  auto_propulsion_flag: false
  secondary_objective_flag: true

# ******* PRE-PLANNED FLIGHT *******
circle_parameters:
  gain: 10
  omega: 0.1
 
# secondary objectives of the drones, with the form robot_ID: [x, y, z, target(true)|sink(false)] 
# Be careful, there is no check that on the robot_ID in this list, if add a secondary objective for robot 10 and robot 10 does not exist, it will be ignored
secondary_objectives: 
  # 0: [-15, -40, 10, false]
  # 1: [40, 85, 10, true]
  # 2: [0, 50, 10, false]
  # 3: [40, 70, 10, false]

  # 0: [-30, 0, 10, true]
  # 1: [30, 200, 10, false]

  0: [0, 0, 10, true]
  1: [100, 200, 10, false]
  # 2: [-50, 150, 10, false]
  # 3: [0, 150, 10, false]

target_altitude: 10.0 # Flocking is done at fixed altitude for now.

neighbor_timeout_value: 2000000 # Value after which the robot will be considered as lost (microseconds)

max_neighbors: 10 # Maximum number of neighbors considered by each robot (take the best ones)

# ******** OBSTACLES ********

# Buildings are defined with their center (x, y), and their size in the three dimensions : (size_x, size_y, height)
auto_buildings: false # if false, "buildings" is used
distribution: uniform # [uniform, normal]
numb_obst: 10
radius_obst: 10
radius_stdev_obst: 0
height_obst: 10
arena_radius: 100
arena_center_x: 0
arena_center_y: 100

buildings:
  # - id: 1
  #   x: 10
  #   y: 40
  #   height: 20
  #   size_x: 20
  #   size_y: 10

# CORRIDOR
  # - id: 1
  #   x: -50
  #   y: 0
  #   height: 20
  #   size_x: 50
  #   size_y: 300
  # - id: 2
  #   x: 50
  #   y: -45
  #   height: 20
  #   size_x: 50
  #   size_y: 210
  # - id: 3
  #   x: 5
  #   y: 125
  #   height: 20
  #   size_x: 60
  #   size_y: 50
  # - id: 4
  #   x: 10
  #   y: 200
  #   height: 20
  #   size_x: 50
  #   size_y: 100
  # - id: 5
  #   x: 100
  #   y: 150
  #   height: 20
  #   size_x: 50
  #   size_y: 200

# ******* GAZEBO *******

world_sdf_path: /src/worlds/default.sdf
update_rate: 20000 # in Hz | The objective rate at which Gazebo tries to run simulation loops. 

# Period of the command loop of the robots (Gazebo only)
cmd_loop_period: 100000 # us

# ******* DANCERS OPTIONS *******

# Simulation timings. BE CAREFUL : sync_window must be divisible by phy_step_size, phy_step_size must be divisible by net_step_size 
# and phy_step_size must a multiple of step_length
sync_window: 10000 # in us | the duration between two position exchange and clock synchronization between physics and network simulators
phy_step_size: 10000 # in us | the duration of 1 physics simulator simulation loop
net_step_size: 5000 # in us

print_debug: true

save_compute_time: false
enable_stats: false

net_use_uds: true
phy_use_uds: true

do_driver_transfer: false

# network simulator socket: UDS
net_uds_server_address: /tmp/net_server_socket
# network simulator socket: TCP
net_ip_server_address: '127.0.0.1'
net_ip_server_port: 10000

# physics simulator socket: UDS
phy_uds_server_address: /tmp/phy_server_socket
# physics simulator socket: TCP
phy_ip_server_address: '127.0.0.1'
phy_ip_server_port: 10000

# Special variable used for Robotsim only (UDS socket connection between viragh_connector and Robotsim)
viragh_uds_server_address: /tmp/viragh_server_socket